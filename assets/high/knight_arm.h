
#ifndef knight_arm_H
#define knight_arm_H

GLfloat knight_arm_vertices[] = {0.258964,-0.36363,0.170891,-0.207133,-0.290882,-0.417094,0.207154,-0.290882,-0.417094,0.290892,0.207142,-0.417094,0.363644,-0.258951,0.170891,0.290892,-0.207145,-0.417094,-0.258934,0.258948,0.27557,0.258964,-0.258951,0.27557,0.258964,0.258948,0.27557,-0.363614,-0.258951,0.170891,-0.290871,0.207142,-0.417094,-0.290871,-0.207145,-0.417094,-0.258934,0.363628,0.170891,0.207154,0.29088,-0.417094,-0.207133,0.29088,-0.417094,-0.258934,-0.36363,0.170891,-0.258934,-0.258951,0.27557,-0.363614,0.258948,0.170891,0.363644,0.258948,0.170891,0.258964,0.363628,0.170891,-0.235419,-0.235407,-1.58401,-0.235419,-0.33057,-1.48884,-0.330583,-0.235407,-1.48884,-0.235419,0.23541,-1.58401,-0.330583,0.23541,-1.48884,-0.235419,0.330574,-1.48884,0.235397,-0.235407,-1.58401,0.330561,-0.235407,-1.48884,0.235397,-0.33057,-1.48884,0.235397,0.23541,-1.58401,0.235397,0.330574,-1.48884,0.330561,0.23541,-1.48884,-0.233966,0.166609,-0.392855,-0.166615,0.23396,-0.392855,0.166599,0.23396,-0.392855,0.233951,0.166609,-0.392855,0.233951,-0.166607,-0.392855,0.166599,-0.233957,-0.392855,-0.166615,-0.233957,-0.392855,-0.233966,-0.166607,-0.392855};
GLbyte knight_arm_normals[] = {45,-114,35,-47,-116,-19,47,-116,-19,116,47,-19,114,-45,35,116,-47,-19,-43,43,111,43,-43,111,43,43,111,-114,-45,35,-116,47,-19,-116,-47,-19,-45,114,35,47,116,-19,-47,116,-19,-45,-114,35,-43,-43,111,-114,45,35,114,45,35,45,114,35,-43,-43,-111,-44,-113,-37,-113,-44,-37,-43,43,-111,-113,44,-37,-44,113,-37,43,-43,-111,113,-44,-37,44,-113,-37,43,43,-111,44,113,-37,113,44,-37,-117,48,13,-48,117,13,48,117,13,117,48,13,117,-48,13,48,-117,13,-48,-117,13,-117,-48,13};
GLubyte knight_arm_colors[] = {203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254,203,223,254};
const GLubyte knight_arm_indices[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,9,6,12,17,7,0,4,8,18,19,1,9,11,6,9,16,8,12,6,7,18,8,16,0,7,2,4,0,3,19,18,12,10,17,20,21,22,23,24,25,26,27,28,29,30,31,20,24,23,25,32,33,23,30,29,31,34,35,29,27,26,28,36,37,26,21,20,29,20,23,38,22,21,33,30,25,22,32,24,35,27,31,37,21,28,0,15,1,3,18,4,6,16,7,9,17,10,12,19,13,1,15,9,6,17,9,8,19,12,7,4,18,16,15,0,2,5,4,3,13,19,12,14,10,20,22,24,25,24,32,23,25,30,31,30,34,29,31,27,28,27,36,26,28,21,29,26,20,38,39,22,33,34,30,22,39,32,35,36,27,37,38,21};
const GLsizeiptr knight_arm_numind = 180;
const GLsizeiptr knight_arm_numvert = 40;

void register_knight_arm()
{
    esBind(GL_ARRAY_BUFFER, &esModelArray[esModelArray_index].vid, knight_arm_vertices, sizeof(knight_arm_vertices), GL_STATIC_DRAW);
    esBind(GL_ARRAY_BUFFER, &esModelArray[esModelArray_index].nid, knight_arm_normals, sizeof(knight_arm_normals), GL_STATIC_DRAW);
    esBind(GL_ARRAY_BUFFER, &esModelArray[esModelArray_index].cid, knight_arm_colors, sizeof(knight_arm_colors), GL_STATIC_DRAW);
    esBind(GL_ELEMENT_ARRAY_BUFFER, &esModelArray[esModelArray_index].iid, knight_arm_indices, sizeof(knight_arm_indices), GL_STATIC_DRAW);
    esModelArray[esModelArray_index].itp = GL_UNSIGNED_BYTE;
    esModelArray[esModelArray_index].ni = knight_arm_numind;
    esModelArray[esModelArray_index].nv = knight_arm_numvert;
    esModelArray[esModelArray_index].pos = (vec){1.50204e-05, -1.2517e-06, -0.654218};
    esModelArray[esModelArray_index].rad = 0.929788;
    esModelArray[esModelArray_index].rsq = 0.864506;
    esModelArray[esModelArray_index].vertices = knight_arm_vertices;
    esModelArray[esModelArray_index].normals = knight_arm_normals;
    esModelArray[esModelArray_index].colors = knight_arm_colors;
    esModelArray_index++;
}

#endif
